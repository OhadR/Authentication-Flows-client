<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


    <context:property-placeholder location="classpath:/client.properties" />

    <context:component-scan base-package="com.ohadr.security.oauth.examples" />
    <context:component-scan base-package="com.ohadr.auth_flows.*" />
    <context:component-scan base-package="com.ohadr.crypto.*" />

    <context:annotation-config />

    <mvc:default-servlet-handler />

    <mvc:annotation-driven/>


    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/WEB-INF/pages/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>

    <sec:http pattern="/login/**" security="none" />
    <sec:http pattern="/forgotPasswordPage" security="none" />
    <sec:http pattern="/forgotPassword" security="none" />
    <sec:http pattern="/createAccountPage" security="none" />
    <sec:http pattern="/createAccount" security="none" />


	<sec:http authentication-manager-ref="authenticationManager">
		<sec:intercept-url pattern="/secure/**" access="ROLE_USER" />
		<sec:anonymous/>

        <!-- sec:form-login/-->
        
		<sec:form-login 
			login-page="/login/login.htm" 
			authentication-success-handler-ref="authenticationSuccessHandler"
			authentication-failure-handler-ref="authenticationFailureHandler" />

        <sec:remember-me 
			data-source-ref="dataSource"
			user-service-ref="userDetailsService"/>

        
	</sec:http>

	<bean id="authenticationFailureHandler" class="com.ohadr.auth_flows.core.AuthenticationFailureHandler">
		<constructor-arg value="/login/login.htm?login_error=1"/>
		<property name="accountLockedUrl" value="/login/accountLocked.htm" />
	</bean>
	
		
	<!-- bean name="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/oauth/commence" />
		<property name="useForward" value="false" />
	</bean-->


    <!-- bean id="oauthAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.MediaTypeAwareAuthenticationEntryPoint">
        <property name="realmName" value="butkec" />
    </bean>

    <bean id="oauthAccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.MediaTypeAwareAccessDeniedHandler" /-->
 


    <!--  for test purposes, work without JDBC 

    <sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider user-service-ref="userDetailsService"/>
	</sec:authentication-manager>
	
	<sec:user-service id="userDetailsService">
		<sec:user name="admin"  password="admin"  authorities="ROLE_USER,ROLE_ADMIN" />
	</sec:user-service>
	
	-->
	<!-- till here test -->
	


	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider user-service-ref="userDetailsService" >
			<sec:password-encoder hash="sha-256">
				<sec:salt-source user-property="username"/>
			</sec:password-encoder>
		</sec:authentication-provider>
	</sec:authentication-manager>


    <!-- do not use Spring's; use mine, see below 
    bean id="userDetailsService"
          class="org.springframework.security.provisioning.JdbcUserDetailsManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="enableGroups" value="false"/>
        <property name="rolePrefix" value="ROLE_"/>
    </bean-->
    


	<bean id="butkeDemoService" class="com.ohadr.security.oauth.examples.impl.DemoServiceImpl">
	</bean>
	
	<bean id="passwordEncoder" 	class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg value="256"/>
	</bean>
	
	
	
    <!-- decide how you wanna work: in-mem repo, or jdbc impl: -->
    <!-- bean class="com.ohadr.auth_flows.mocks.InMemoryAuthenticationAccountRepositoryImpl" /-->
    <!-- bean class="com.ohadr.auth_flows.core.jdbc.JdbcAuthenticationAccountRepositoryImpl" /-->
    <bean id="userDetailsService" class="com.ohadr.auth_flows.core.jdbc.JdbcAuthenticationAccountRepositoryImpl" />

    <bean class="com.ohadr.auth_flows.core.jdbc.JdbcAuthenticationPolicyRepositoryImpl" />

    <!-- data-source -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.jamonapi.proxy.JAMonDriver"/>
        <property name="jdbcUrl"
                  value="jdbc:jamon:mysql://${com.ohadr.oauth2.db.host}:${com.ohadr.oauth2.db.port}/${com.ohadr.oauth2.db.schema}?jamonrealdriver=org.gjt.mm.mysql.Driver;useUnicode=true&amp;characterEncoding=utf-8"/>
        <property name="user" value="${com.ohadr.oauth2.db.username}"/>
        <property name="password" value="${com.ohadr.oauth2.db.password}"/>
        <property name="acquireIncrement" value="1"/>
        <property name="idleConnectionTestPeriod" value="100"/>
        <property name="maxPoolSize" value="10"/>
        <property name="maxStatements" value="5"/>
        <property name="minPoolSize" value="5"/>
    </bean>



	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="${com.ohadr.auth-flows.mail.username}" />
		<property name="password" value="${com.ohadr.auth-flows.mail.password}" />

		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
	
	
</beans>
